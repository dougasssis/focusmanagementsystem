# Generated by Django 4.0.4 on 2022-04-13 15:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import shortuuid.django_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet='0123456789', editable=False, length=3, max_length=3, prefix='', primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('contact_name', models.CharField(max_length=255)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('location', models.CharField(max_length=255)),
                ('phone', models.CharField(help_text='Use only numbers', max_length=15)),
                ('join_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['country'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet='0123456789', editable=False, length=4, max_length=4, prefix='', primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('nome', models.CharField(max_length=12, verbose_name='Name')),
                ('middle_name', models.CharField(max_length=20, verbose_name='Middle Name')),
                ('surname', models.CharField(max_length=15, null=True, verbose_name='Last Name')),
                ('phone', models.CharField(help_text='Use only numbers', max_length=15)),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('belt', models.CharField(choices=[('White Belt', 'White Belt'), ('Gray/White Belt', 'Gray/White Belt'), ('Gray Belt', 'Gray Belt'), ('Gray/Black Belt', 'Gray/Black Belt'), ('Yellow/White Belt', 'Yellow/White Belt'), ('Yellow Belt', 'Yellow Belt'), ('Yellow/Black Belt', 'Yellow/Black Belt'), ('Orange/White Belt', 'Orange/White Belt'), ('Orange Belt', 'Orange Belt'), ('Orange/Black Belt', 'Orange/Black Belt'), ('Green/White Belt', 'Green/White Belt'), ('Green Belt', 'Green Belt'), ('Green/Black Belt', 'Green/Black Belt'), ('Blue Belt', 'Blue Belt'), ('Purple Belt', 'Purple Belt'), ('Brown Belt', 'Brown Belt'), ('Black Belt', 'Black Belt')], max_length=255)),
                ('stripe', models.CharField(choices=[('No Stripes', 'No Stripes'), ('Iº Stripe', 'Iº Stripe'), ('IIº Stripe', 'IIº Stripe'), ('IIIº Stripe', 'IIIº Stripe'), ('IVº Stripe', 'IVº Stripe'), ('-------------', '-------------'), ('Vº Stripe', 'Vº Stripe'), ('VIº Stripe', 'VIº Stripe'), ('VIIº Stripe', 'VIIº Stripe'), ('VIIIº Stripe', 'VIIIº Stripe'), ('IXº Stripe', 'IXº Stripe'), ('Xº Stripe', 'Xº Stripe'), ('XIº Stripe', 'XIº Stripe')], max_length=255)),
                ('join_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('gender', models.CharField(choices=[('Female', 'Feminino'), ('Male', 'Masculino')], max_length=255)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='produtos/')),
                ('item', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.CharField(max_length=6, null=True)),
                ('sugg_price', models.CharField(max_length=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, help_text='Use (.) to decimals', max_digits=6, verbose_name='Total')),
                ('time_stamp', models.DateField(default=django.utils.timezone.now)),
                ('method', models.CharField(choices=[('Credit Card', 'Cartão de Crédito'), ('Debit Card', 'Cartão de Débito'), ('Cash', 'Dinheiro'), ('Others', 'Outros')], default='Others', max_length=20)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='focusbjj.aluno')),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qtd', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('price', models.CharField(blank=True, max_length=6, null=True)),
                ('product', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.CASCADE, related_name='produto', to='focusbjj.productslist', verbose_name='Item')),
                ('venda', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='venda', to='focusbjj.venda')),
            ],
        ),
        migrations.CreateModel(
            name='Graduation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belt', models.CharField(choices=[('White Belt', 'White Belt'), ('Gray/White Belt', 'Gray/White Belt'), ('Gray Belt', 'Gray Belt'), ('Gray/Black Belt', 'Gray/Black Belt'), ('Yellow/White Belt', 'Yellow/White Belt'), ('Yellow Belt', 'Yellow Belt'), ('Yellow/Black Belt', 'Yellow/Black Belt'), ('Orange/White Belt', 'Orange/White Belt'), ('Orange Belt', 'Orange Belt'), ('Orange/Black Belt', 'Orange/Black Belt'), ('Green/White Belt', 'Green/White Belt'), ('Green Belt', 'Green Belt'), ('Green/Black Belt', 'Green/Black Belt'), ('Blue Belt', 'Blue Belt'), ('Purple Belt', 'Purple Belt'), ('Brown Belt', 'Brown Belt'), ('Black Belt', 'Black Belt')], max_length=255)),
                ('stripe', models.CharField(choices=[('No Stripes', 'No Stripes'), ('Iº Stripe', 'Iº Stripe'), ('IIº Stripe', 'IIº Stripe'), ('IIIº Stripe', 'IIIº Stripe'), ('IVº Stripe', 'IVº Stripe'), ('-------------', '-------------'), ('Vº Stripe', 'Vº Stripe'), ('VIº Stripe', 'VIº Stripe'), ('VIIº Stripe', 'VIIº Stripe'), ('VIIIº Stripe', 'VIIIº Stripe'), ('IXº Stripe', 'IXº Stripe'), ('Xº Stripe', 'Xº Stripe'), ('XIº Stripe', 'XIº Stripe')], max_length=255)),
                ('time_stamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduacao', to='focusbjj.aluno', verbose_name='Athlete')),
            ],
        ),
        migrations.CreateModel(
            name='GetAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.DateTimeField(default=django.utils.timezone.now)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='focusbjj.aluno', verbose_name='Athlete')),
            ],
        ),
        migrations.CreateModel(
            name='Championship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('championship', models.CharField(max_length=50)),
                ('date', models.DateField(null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.CharField(max_length=30)),
                ('category', models.CharField(choices=[('juvenil', 'Juvenil'), ('adult master', 'Adulto/Master')], max_length=20)),
                ('weight', models.CharField(choices=[('rooster', 'Rooster'), ('light feather', 'Light Feather'), ('feather', 'Feather'), ('light', 'Light'), ('middle', 'Middle'), ('middle heavy', 'Middle Heavy'), ('heavy', 'Heavy'), ('super heavy', 'Super Heavy'), ('ultra heavy', 'Ultra Heavy'), ('open', 'Open')], max_length=20)),
                ('ranking', models.CharField(choices=[('first place', 'Primeiro Lugar'), ('second place', 'Segundo Lugar'), ('third place', 'Teceiro Lugar')], max_length=20)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campeonato', to='focusbjj.aluno')),
            ],
        ),
    ]
